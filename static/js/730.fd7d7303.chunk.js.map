{"version":3,"file":"static/js/730.fd7d7303.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Loader/Loader.jsx","services/themoviedb-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Notiflix from 'notiflix';\n\nimport Loader from 'components/Loader';\n\nimport { fetchCast } from 'services/themoviedb-api';\nimport defaultAvatar from 'images/avatar.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [ , setError] = useState(false);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      fetchCast(movieId).then(description => {\n        if (description.length === 0) {\n          setIsLoading(false);\n        } else {\n          setCast(() => [...description]);\n          setIsLoading(false);\n        }\n      });\n    } catch (err) {\n      setError(true);\n      setIsLoading(false);\n      Notiflix.Notify.failure('Oops... Something went wrong please try again!');\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <h3>Cast</h3>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(({ name, id, profile_path, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                    : defaultAvatar\n                }\n                alt={name}\n                width=\"200\"\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        'Sorry no information'\n      )}\n    </div>\n  );\n};\n\nexport default Cast;","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            color=\"#3f51b5\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{margin: 'auto'}}\n            visible={true}\n        />\n    );\n};\n\nexport default Loader;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_TO_API = 'ae38d5c8baf36c9c4ca14e9456f3c0fd';\n\nexport async function fetchMovies() {\n  const optionsURL = 'trending/movie/day';\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const movies = await response.data.results;\n\n  return movies;\n};\n\nexport async function fetchInfo(id) {\n  const optionsURL = `movie/${id}`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const info = await response.data;\n\n  return info;\n};\n\nexport async function fetchReviews(id) {\n  const optionsURL = `movie/${id}/reviews`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const reviews = await response.data.results;\n\n  return reviews;\n};\n\nexport async function fetchCast(id) {\n  const optionsURL = `movie/${id}/credits`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const cast = await response.data.cast;\n\n  return cast;\n};\n\nexport async function fetchSearch(term) {\n  const optionsURL = `search/movie?query=${term}`;\n  const keyURL = `&api_key=${KEY_TO_API}`;\n  const endURL = '&include_adult=false&language=en-US&page=1'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const search = await response.data.results;\n\n  return search;\n};"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","cast","setCast","_useState5","setError","useEffect","fetchCast","then","description","length","_toConsumableArray","err","Notiflix","_jsxs","children","_jsx","Loader","map","_ref","name","id","profile_path","character","src","concat","defaultAvatar","alt","width","ThreeDots","height","color","ariaLabel","radius","wrapperStyle","margin","visible","BASE_URL","KEY_TO_API","fetchMovies","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","keyURL","url","response","movies","_context","prev","next","axios","sent","data","results","abrupt","stop","fetchInfo","_x","_fetchInfo","_callee2","optionsURL","info","_context2","fetchReviews","_x2","_fetchReviews","_callee3","reviews","_context3","_x3","_fetchCast","_callee4","_context4","fetchSearch","_x4","_fetchSearch","_callee5","term","search","_context5"],"sourceRoot":""}