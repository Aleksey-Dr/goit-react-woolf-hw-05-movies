{"version":3,"file":"static/js/859.a838f76a.chunk.js","mappings":"wMAgBA,EAde,WACX,OACIA,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CACNC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAACC,OAAQ,QACvBC,SAAS,GAGrB,C,oFCFA,EAV0B,SAAHC,GAAuB,IAAjBC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MACvBC,GAAWC,EAAAA,EAAAA,MAEjB,OACId,EAAAA,EAAAA,KAAA,MAAAe,UAAIf,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CACLC,GAA0B,YAAtBJ,EAASK,SAAsB,GAAAC,OAAMR,GAAE,UAAAQ,OAAeR,GAC1DS,MAAO,CAAEC,KAAMR,GAAWE,SAAEH,KAExC,C,wJCqCA,EAvCa,WACX,IAAAU,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA0BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAsBtB,OApBAG,EAAAA,EAAAA,YAAU,WACR,IACET,GAAa,IACbU,EAAAA,EAAAA,MAAcC,MAAK,SAAAC,GACM,IAAnBA,EAAQC,QACVC,IAAAA,OAAAA,QAAwB,kCACxBd,GAAa,KAEbI,GAAU,kBAAAW,EAAAA,EAAAA,GAAUH,EAAO,IAC3BZ,GAAa,GAEjB,GAMF,CALE,MAAOgB,GACPR,GAAS,GACTR,GAAa,GACbc,IAAAA,OAAAA,QAAwB,kDACxBG,QAAQC,IAAIX,EACd,CACF,GAAG,CAACA,KAGFY,EAAAA,EAAAA,MAAA,OAAA/B,SAAA,EACEf,EAAAA,EAAAA,KAAA,MAAAe,SAAI,mBACHW,IAAa1B,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,KACrB/C,EAAAA,EAAAA,KAAA,MAAAe,SACGe,GACCA,EAAOkB,KAAI,SAAAtC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OACrBZ,EAAAA,EAAAA,KAACiD,EAAAA,EAAiB,CAAUtC,GAAIA,EAAIC,MAAOA,GAAnBD,EAA4B,QAKhE,C,8LC3CMuC,EAAW,gCACXC,EAAa,mCAEZ,SAAed,IAAW,OAAAe,EAAAC,MAAC,KAADC,UAAA,CAUhC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MAVM,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA9B,EAAA,OAAA0B,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIqC,MAHvB,qBACbL,EAAM,YAAAvC,OAAegC,GAErBQ,EAAMT,EAHO,qBAGiBQ,EAAMG,EAAAE,KAAA,EAEnBC,EAAAA,EAAAA,IAAUL,GAAK,KAAD,EAAvB,OAARC,EAAQC,EAAAI,KAAAJ,EAAAE,KAAA,EACOH,EAASM,KAAKC,QAAQ,KAAD,EAA9B,OAANrC,EAAM+B,EAAAI,KAAAJ,EAAAO,OAAA,SAELtC,GAAM,yBAAA+B,EAAAQ,OAAA,GAAAZ,EAAA,MACdJ,MAAA,KAAAC,UAAA,CAEM,SAAegB,EAASC,GAAA,OAAAC,EAAAnB,MAAC,KAADC,UAAA,CAW9B,SAAAkB,IAAA,OAAAA,GAAAjB,EAAAA,EAAAA,GAAAC,IAAAA,MAXM,SAAAiB,EAAyB9D,GAAE,IAAA+D,EAAAhB,EAAAC,EAAAC,EAAAe,EAAA,OAAAnB,IAAAA,MAAA,SAAAoB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAKmB,OAJ7CW,EAAU,SAAAvD,OAAYR,GACtB+C,EAAM,YAAAvC,OAAegC,GACZ,kBAETQ,EAAMT,EAAWwB,EAAahB,EAFrB,kBAEoCkB,EAAAb,KAAA,EAE5BC,EAAAA,EAAAA,IAAUL,GAAK,KAAD,EAAvB,OAARC,EAAQgB,EAAAX,KAAAW,EAAAb,KAAA,EACKH,EAASM,KAAK,KAAD,EAAtB,OAAJS,EAAIC,EAAAX,KAAAW,EAAAR,OAAA,SAEHO,GAAI,yBAAAC,EAAAP,OAAA,GAAAI,EAAA,MACZpB,MAAA,KAAAC,UAAA,CAEM,SAAeuB,EAAYC,GAAA,OAAAC,EAAA1B,MAAC,KAADC,UAAA,CAWjC,SAAAyB,IAAA,OAAAA,GAAAxB,EAAAA,EAAAA,GAAAC,IAAAA,MAXM,SAAAwB,EAA4BrE,GAAE,IAAA+D,EAAAhB,EAAAC,EAAAC,EAAAqB,EAAA,OAAAzB,IAAAA,MAAA,SAAA0B,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OAKgB,OAJ7CW,EAAU,SAAAvD,OAAYR,EAAE,YACxB+C,EAAM,YAAAvC,OAAegC,GACZ,kBAETQ,EAAMT,EAAWwB,EAAahB,EAFrB,kBAEoCwB,EAAAnB,KAAA,EAE5BC,EAAAA,EAAAA,IAAUL,GAAK,KAAD,EAAvB,OAARC,EAAQsB,EAAAjB,KAAAiB,EAAAnB,KAAA,EACQH,EAASM,KAAKC,QAAQ,KAAD,EAA9B,OAAPc,EAAOC,EAAAjB,KAAAiB,EAAAd,OAAA,SAENa,GAAO,yBAAAC,EAAAb,OAAA,GAAAW,EAAA,MACf3B,MAAA,KAAAC,UAAA,CAEM,SAAe6B,EAASC,GAAA,OAAAC,EAAAhC,MAAC,KAADC,UAAA,CAU9B,SAAA+B,IAAA,OAAAA,GAAA9B,EAAAA,EAAAA,GAAAC,IAAAA,MAVM,SAAA8B,EAAyB3E,GAAE,IAAA+D,EAAAhB,EAAAC,EAAAC,EAAA2B,EAAA,OAAA/B,IAAAA,MAAA,SAAAgC,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAIU,OAHpCW,EAAU,SAAAvD,OAAYR,EAAE,YACxB+C,EAAM,YAAAvC,OAAegC,GAErBQ,EAAMT,EAAWwB,EAAahB,EAAM8B,EAAAzB,KAAA,EAEnBC,EAAAA,EAAAA,IAAUL,GAAK,KAAD,EAAvB,OAARC,EAAQ4B,EAAAvB,KAAAuB,EAAAzB,KAAA,EACKH,EAASM,KAAKqB,KAAK,KAAD,EAA3B,OAAJA,EAAIC,EAAAvB,KAAAuB,EAAApB,OAAA,SAEHmB,GAAI,yBAAAC,EAAAnB,OAAA,GAAAiB,EAAA,MACZjC,MAAA,KAAAC,UAAA,CAEM,SAAemC,EAAWC,GAAA,OAAAC,EAAAtC,MAAC,KAADC,UAAA,CAWhC,SAAAqC,IAAA,OAAAA,GAAApC,EAAAA,EAAAA,GAAAC,IAAAA,MAXM,SAAAoC,EAA2BC,GAAI,IAAAnB,EAAAhB,EAAAC,EAAAC,EAAAkC,EAAA,OAAAtC,IAAAA,MAAA,SAAAuC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OAKe,OAJ7CW,EAAU,sBAAAvD,OAAyB0E,GACnCnC,EAAM,YAAAvC,OAAegC,GACZ,6CAETQ,EAAMT,EAAWwB,EAAahB,EAFrB,6CAEoCqC,EAAAhC,KAAA,EAE5BC,EAAAA,EAAAA,IAAUL,GAAK,KAAD,EAAvB,OAARC,EAAQmC,EAAA9B,KAAA8B,EAAAhC,KAAA,EACOH,EAASM,KAAKC,QAAQ,KAAD,EAA9B,OAAN2B,EAAMC,EAAA9B,KAAA8B,EAAA3B,OAAA,SAEL0B,GAAM,yBAAAC,EAAA1B,OAAA,GAAAuB,EAAA,MACdvC,MAAA,KAAAC,UAAA,C","sources":["components/Loader/Loader.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","pages/Home/Home.jsx","services/themoviedb-api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            color=\"#3f51b5\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{margin: 'auto'}}\n            visible={true}\n        />\n    );\n};\n\nexport default Loader;","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesGalleryItem = ({ id, title }) => {\n    const location = useLocation();\n\n    return (\n        <li><Link\n            to={location.pathname === '/movies' ? `${id}` : `movies/${id}`}\n            state={{ from: location }}>{title}</Link></li>\n    );\n};\n\nexport default MoviesGalleryItem;","import { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\n\nimport Loader from 'components/Loader';\nimport MoviesGalleryItem from 'components/MoviesGalleryItem';\n\nimport { fetchMovies } from 'services/themoviedb-api';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      fetchMovies().then(gallery => {\n        if (gallery.length === 0) {\n          Notiflix.Notify.warning('Nothing found for your request');\n          setIsLoading(false);\n        } else {\n          setMovies(() => [...gallery]);\n          setIsLoading(false);\n        }\n      });\n    } catch (err) {\n      setError(true);\n      setIsLoading(false);\n      Notiflix.Notify.failure('Oops... Something went wrong please try again!');\n      console.log(error);\n    }\n  }, [error]);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {isLoading && <Loader />}\n      <ul>\n        {movies &&\n          movies.map(({ id, title }) => (\n            <MoviesGalleryItem key={id} id={id} title={title} />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_TO_API = 'ae38d5c8baf36c9c4ca14e9456f3c0fd';\n\nexport async function fetchMovies() {\n  const optionsURL = 'trending/movie/day';\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const movies = await response.data.results;\n\n  return movies;\n};\n\nexport async function fetchInfo(id) {\n  const optionsURL = `movie/${id}`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const info = await response.data;\n\n  return info;\n};\n\nexport async function fetchReviews(id) {\n  const optionsURL = `movie/${id}/reviews`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const reviews = await response.data.results;\n\n  return reviews;\n};\n\nexport async function fetchCast(id) {\n  const optionsURL = `movie/${id}/credits`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const cast = await response.data.cast;\n\n  return cast;\n};\n\nexport async function fetchSearch(term) {\n  const optionsURL = `search/movie?query=${term}`;\n  const keyURL = `&api_key=${KEY_TO_API}`;\n  const endURL = '&include_adult=false&language=en-US&page=1'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const search = await response.data.results;\n\n  return search;\n};"],"names":["_jsx","ThreeDots","height","width","color","ariaLabel","radius","wrapperStyle","margin","visible","_ref","id","title","location","useLocation","children","Link","to","pathname","concat","state","from","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movies","setMovies","_useState5","_useState6","error","setError","useEffect","fetchMovies","then","gallery","length","Notiflix","_toConsumableArray","err","console","log","_jsxs","Loader","map","MoviesGalleryItem","BASE_URL","KEY_TO_API","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","keyURL","url","response","_context","prev","next","axios","sent","data","results","abrupt","stop","fetchInfo","_x","_fetchInfo","_callee2","optionsURL","info","_context2","fetchReviews","_x2","_fetchReviews","_callee3","reviews","_context3","fetchCast","_x3","_fetchCast","_callee4","cast","_context4","fetchSearch","_x4","_fetchSearch","_callee5","term","search","_context5"],"sourceRoot":""}