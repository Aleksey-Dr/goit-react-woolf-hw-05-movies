{"version":3,"file":"static/js/243.0b7784aa.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","pages/Film/Film.jsx","services/themoviedb-api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            color=\"#3f51b5\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{margin: 'auto'}}\n            visible={true}\n        />\n    );\n};\n\nexport default Loader;","import { Suspense } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nimport Notiflix from 'notiflix';\n\nimport Loader from 'components/Loader';\n\nimport { fetchInfo } from 'services/themoviedb-api';\n\nconst Film = () => {\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? \"/movies\");\n    \n    const [isLoading, setIsLoading] = useState(false);\n    const [movie, setMovie] = useState({});\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        try {\n        setIsLoading(true);\n        fetchInfo(movieId).then(description => {\n            if (!description) {\n                setIsLoading(false);\n            } else {\n                setMovie(() => description);\n                setIsLoading(false);\n            }\n        });\n        } catch (err) {\n        setError(true);\n        setIsLoading(false);\n        Notiflix.Notify.failure('Oops... Something went wrong please try again!');\n        console.log(error);\n        }\n    }, [error, movieId]);\n\n    return (\n        <div>\n            <section>\n                <Link to={backLinkLocationRef.current}><p><BsArrowLeft /> Go back</p></Link>\n                {isLoading && <Loader />}\n                <h2>{movie.title}</h2>\n                <img\n                    src={movie.poster_path && `https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n                    alt=\"poster\" />\n                <ul>\n                    <li>\n                        User Score: {(movie.vote_average * 10).toFixed(0)}\n                    </li>\n                    <li>\n                        <b>Overview</b>\n                        <p>{ movie.overview }</p>\n                    </li>\n                    <li>\n                        <b>Genres</b>\n                        <p>\n                            {movie.genres && movie.genres.map(({ id, name }) =>\n                                (<span key={id}>{name} </span>))}\n                        </p>\n                    </li>\n                </ul>\n            </section>\n            <section>\n                <h2>Additional information</h2>\n                <ul>\n                    <li>\n                        <Link to=\"cast\">Cast</Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\">Reviews</Link>\n                    </li>\n                </ul>\n                <Suspense>\n                    <Outlet />\n                </Suspense>\n            </section>\n        </div>\n    );\n};\n\nexport default Film;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_TO_API = 'ae38d5c8baf36c9c4ca14e9456f3c0fd';\n\nexport async function fetchMovies() {\n  const optionsURL = 'trending/movie/day';\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const movies = await response.data.results;\n\n  return movies;\n};\n\nexport async function fetchInfo(id) {\n  const optionsURL = `movie/${id}`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const info = await response.data;\n\n  return info;\n};\n\nexport async function fetchReviews(id) {\n  const optionsURL = `movie/${id}/reviews`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const reviews = await response.data.results;\n\n  return reviews;\n};\n\nexport async function fetchCast(id) {\n  const optionsURL = `movie/${id}/credits`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const cast = await response.data.cast;\n\n  return cast;\n};\n\nexport async function fetchSearch(term) {\n  const optionsURL = `search/movie?query=${term}`;\n  const keyURL = `&api_key=${KEY_TO_API}`;\n  const endURL = '&include_adult=false&language=en-US&page=1'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const search = await response.data.results;\n\n  return search;\n};"],"names":["_jsx","ThreeDots","height","width","color","ariaLabel","radius","wrapperStyle","margin","visible","_location$state$from","_location$state","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movie","setMovie","_useState5","_useState6","error","setError","useEffect","fetchInfo","then","description","err","Notiflix","console","log","_jsxs","children","Link","to","current","BsArrowLeft","Loader","title","src","poster_path","concat","alt","vote_average","toFixed","overview","genres","map","_ref","id","name","Suspense","Outlet","BASE_URL","KEY_TO_API","fetchMovies","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","keyURL","url","response","movies","_context","prev","next","axios","sent","data","results","abrupt","stop","_x","_fetchInfo","_callee2","optionsURL","info","_context2","fetchReviews","_x2","_fetchReviews","_callee3","reviews","_context3","fetchCast","_x3","_fetchCast","_callee4","cast","_context4","fetchSearch","_x4","_fetchSearch","_callee5","term","search","_context5"],"sourceRoot":""}